plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.johanaerens'
def buildNmbr = '-SNAPSHOT'
if (project.hasProperty('buildNmbr')) {
    buildNmbr = '.' + project.buildNmbr
}
project.version = '0.0.5' + buildNmbr

springBoot {
    buildInfo()
}

bootRun {
    systemProperty 'spring.profiles.active', 'dev'
}


java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudAzureVersion', "5.8.0")
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.azure.spring:spring-cloud-azure-starter'
    implementation 'com.azure.spring:spring-cloud-azure-starter-actuator'
//    implementation 'com.azure.spring:spring-cloud-azure-starter-keyvault'
    implementation 'com.azure.spring:spring-cloud-azure-appconfiguration-config-web'
    implementation 'com.microsoft.azure:applicationinsights-runtime-attach:3.4.19'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
//    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'

    compileOnly("org.springframework.boot:spring-boot-devtools")
}

dependencyManagement {
    imports {
        mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootBuildImage") {
    builder = "paketobuildpacks/builder-jammy-base:latest"
}

jib {
    from {
        image = 'azul/zulu-openjdk:21-jre'
    }
    to {
        image ="securexacr001.azurecr.io/${rootProject.name}:$version"
    }
}
